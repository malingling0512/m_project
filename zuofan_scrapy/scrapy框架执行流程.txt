scrap流程：

1.框架：
engin爬虫引擎：负责控制各个组件中的数据流，当某些操作触发事件后，通过引擎来处理；
downloader下载器：通过爬虫引擎请求（request）下载网络数据，并将结果响应给（response）引擎；
下载器中间件：指是引擎和下载器交互的组件，以钩子的形式存在（插件），可以代替接受请求，处理下载结果，以及将结果响应给引擎；
itempipe管道:负责处理引擎返回的spider解析后的数据，并将数据持久化，例如将数据存储为数据库或文件；
spider：发出请求给引擎——>并且能处理引擎返回下载器响应的数据，以item或（规则内的数据请求）返回给引擎；
scheduler调度器：调度接收来自引擎的请求，并将请求放入队列，通过事件再返回给引擎
spider中间件：spider是引擎和spider中间器交互的组件，以钩子（插件）的形式存在，可以代替处理response，以及返回给引擎的item和新的请求集

2.流程
（1）.爬虫引擎获得初始请求，并开始抓取
（2）.爬虫引擎开始请求调度程序，并准备对下一次的请求开始抓取
（3）.爬虫调度器返回一个请求给爬虫引擎
（4）.引擎请求发送到下载器，通过下载中间件下载网络数据
（5）.下载器完成页面下载，将下载结果返回给爬虫引擎
（6）.爬虫引擎将下载器的响应通过中间件返回给spider爬虫处理
（7）.爬虫spider处理响应并通过中间件返回处理后的items，以及新的请求给引擎
（8）.引擎发送处理后的items给项目管道pipe，然后把处理结果返回给调度器，调度器计划处理下一个请求的抓取
（9）.重复该过程，继续步骤一，直到抓取完所有url请求

3.